<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html><head>
<meta http-equiv="Content-Language" content="en-us">

<title>Add-ons</title><link rel="stylesheet" type="text/css" href="../style.css"></head>


<body>

<div align="center">
<table class="allEncompassingTable">
 <tbody><tr>
  <td>
<p><a href="../index.html" target="_top"><img src="images/homeImg.png"></a></p>



<h1>Add-ons</h1>

<p>An add-on in V-REP is quite similar to a <a href="plugins.htm">plugin</a>:
it is automatically loaded at program start-up, and allows V-REP's
functionality to be extended by user-written functionality or
functions. Add-on scripts are written in <a href="http://www.lua.org">Lua</a>. Two types of add-ons are supported:</p>

<li><strong>Add-on functions</strong>: add-on&nbsp;functions appear
first in the add-on menu. They can be seen as functions that will be
executed once, when selected by the user. Importers and exporters can
conveniently be implemented with them. </li>
<li><strong>Add-on scripts</strong>: add-on scripts are executed
constantly while the simulator is running, effectively running in the
background. They should only execute minimalistic code everytime they
are called, since the whole application would otherwise slow down.
Add-on scripts are called differently depending on the simulation state:</li>
<li class="tab">When simulation is not running (i.e. stopped or paused): add-on scripts are called just before visualization of the scene</li>
<li class="tab">When simulation running: add-on scripts are called just after the main script was called</li>

<p>Add-on functions should be written in a text file located in the
same folder as the main application, with following naming convention:</p>

<li><strong>vrepAddOnFunc_xxxx.lua</strong>, where xxxx can be any string representing the name of an add-on function.</li>
<li><strong>vrepAddOnScript_xxxx.lua</strong>, where xxxx can be any
string representing the name of the add-on script. The add-on script
will be automatically started. Selecting it in the add-on menu allows
pausing/unpausing its execution. The script can request termination by returning 0.</li>
<li><strong>vrepAddOnScript-xxxx.lua</strong>, where xxxx can be any
string representing the name of the add-on script. The add-on script
will not be automatically started. The user can start/pause/unpause it when required
by selecting it in the add-on menu. The script can request termination by returning 0.</li>

<p>Add-on scripts that do not follow above naming convention can still be loaded and run via <a href="commandLine.htm">command line options</a>.</p>

<p>Add-ons can call any of the <a href="apiOverview.htm">regular API functions</a>, as long as not stated otherwise in the documentation. They can even call custom Lua functions registered by <a href="plugins.htm">plugins</a>. They however have two restrictions:</p>
<li>Add-ons cannot call API functions that require the caller to run in
a thread. This is because add-ons operate in a non-threaded fashion.</li>
<li>While simulation is not running, add-ons should not call API functions that make sense only when simulation is running.</li>

<p>For more information on add-ons, make sure to inspect the content of the demo add-ons <em>vrepAddOnScript-addOnScriptDemo.lua</em> and <em>vrepAddOnFunc-addOnFunctionDemo.lua</em>, located in the installation folder.</p>
<br>
<br>
<h3 class="recommendedTopics">Recommended topics</h3>
<li><a href="http://www.lua.org">Lua</a></li>
<li><a href="plugins.htm">Plugins</a></li>
<li><a href="apiFunctionListAlphabetical.htm">Regular API functions</a></li>
<br>
<br>
 </td></tr>
</tbody></table> 
</div>  
  
  
</body></html>