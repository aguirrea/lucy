<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>compiling V-REP</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>



<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>
Compiling V-REP and related items
</h1>

<p>
The full source code of V-REP, the DYNAMICS PLUGIN and the MESH CALCULATION PLUGIN may be downloaded from the <a href="http://www.coppeliarobotics.com">coppelia robotics website</a>.  While V-REP is GNU GPL licensed, the DYNAMICS PLUGIN and the MESH CALCULATION PLUGIN have a specific license attached. In short, only EDUCATIONAL ENTITIES (students, teachers, professors, schools or Universities) may download and use those plugins without explicit permission. Make sure you understand and comply with the <a href="licensing.htm">licensing conditions</a> before doing so.</p>
<p>Other source code items (e.g. various projects, plugins, interfaces, etc.) that are included in the installation packages of V-REP PRO and V-REP PRO EDU are not discussed here.</p>
<p>V-REP, the DYNAMICS PLUGIN and the MESH CALCULATION PLUGIN are <a href="http://qt-project.org/">Qt</a> projects, and will require you to have Qt installed on your computer.  Try to comply with following list of requirements in order to encounter least problems during compilation:</p>

<li>if possible, try using the same Qt version as the one that was used to compile the binary V-REP PRO EDU (click [Help --&gt; About V-REP PRO EDU...] to display the Qt version)</li>
<li>if possible, try compiling the projects using <a href="http://qt-project.org/wiki/Category:Tools::QtCreator">Qt Creator</a>.</li>
<li>under Windows, use the MinGW or the MSVC compiler. Under Mac OSX and Linux, use the GCC compiler.</li>
<li>Ubuntu is the preferred Linux distribution.</li>
<li>you will need to download and compile <a href="http://www.riverbankcomputing.com/software/qscintilla/intro">QScintilla2</a> (C++ editor control). </li>
<li>you will need to download and install the <a href="http://www.boost.org/">Boost C++ library</a>. </li>
<li>you will need to download the <a href="http://www.lua.org/">Lua5.1</a> binaries and headers. </li>

<p>Download and install V-REP PRO EDU. Then download the V-REP source code (and optionally the plugin source codes) into the V-REP PRO EDU installation folder. You should have following folder structure:</p>

<p align=center><img src="images/folderStructure.jpg"></p>


<p>&nbsp;</p>
<p>When using V-REP in conjunction with a plugin, make sure to use the source code / binaries that come from the same release, in order to avoid incompatibilities. Finally, before being able to compile the V-REP project, you will have to adjust various paths in the  v_rep.pro project file, such as:</p>



<li>the path to your Boost library folder</li>
<li>the path to your QScintilla/Qt4 folder</li>
<li>the path to your QScintilla folder</li>
<li>the path to your Lua5.1 folder</li>
<li>the location of your lua5.1 library file</li>
<li>the location of your libqscintilla2 library file</li>
 
  <p>V-REP compiles to a shared library. The default client application that loads and runs the library is &quot;vrep&quot; or &quot;vrep.exe&quot;. You can use the precompiled one, or recompile it yourself (refer to following project files: programming/v_repClientApplication or programming/windowsOnlyProjects/v_repClientApplication). The load operation of the library is successfull only if:</p>
  <li>the client application could find all needed functions in the shared library</li>
  <li>the shared library could find all shared libraries that itself relies on (e.g. the Lua shared library) </li>
  
  <p>The easiest for you to do is to copy the compiled libraries into the V-REP PRO or V-REP PRO EDU folder, then you will be sure that V-REP should start and won't complain about missing dependencies.</p>
  
  <p>It is very important that you do not mix various Qt versions, or binaries from various compilers. If your main V-REP library was compiled with Qt X and compiler Y, then all plugins related to V-REP should also have been compiled with Qt X and compiler Y, otherwise, you will experience strange behaviours (library that cannot load, sudden crashes, etc.). This requirement can be relaxed if your plugin is not making use of any Qt function.</p>
  
  <p>Since release 3.3.0, you can also compile V-REP for headless mode operation, without any Qt dependencies. In that case however, the vision sensors will only generate an image content when the rendering is handled via a plugin (e.g. POV-Ray or and external renderer).</p>
  
<br>
<br>
<h3 class=infoBox><strong>Windows 8</strong>, V-REP  V3.0.5, Qt V5.1.1</h3>
 
 <p>Try following next few points in order to correctly install Qt 5.1.1, VS2010 and the debuggers:</p>
 
 <li>Install VS2010</li>
 <li>Install VS2010 service pack1</li>
 <li><a href="http://msdn.microsoft.com/en-us/windows/hardware/gg463009/">Install debugging tools for Windows as part of the Windows SDK</a></li>
 <li><a href="http://qt-project.org/downloads">Install Qt5.1.1 via the Qt online installer for windows</a></li>
 <li><a href="http://qt-project.org/doc/qtcreator-2.6/creator-debugger-engines.html">Set-up the debugger in Qt Creator</a>. Basically: <strong>Projects</strong>-button --&gt; Manage Kits... --&gt; select <strong>Desktop Qt 5.1.1 MSVC2010 32bit</strong>. Then click <strong>Auto-detect</strong>. The exclamation mark next to <strong>Desktop Qt 5.1.1 MSVC2010 32bit</strong> should have disappeared.</li>
 <li>Refer to <a href="http://qt-project.org/doc/qtcreator-2.5/creator-debugger-operating-modes.html">this page</a> for more information about launching the debugger.</li>
 <li>You might also have to: <strong>Tools</strong> --&gt; <strong>options</strong> --&gt; <strong>Debugger</strong> --&gt; <strong>CDB</strong> --&gt; <strong>Symbol paths</strong> and click <strong>Edit...</strong>, then <strong>Insert</strong> and select <strong>Symbol Server...</strong> then <strong>Ok</strong>.</li>
 <li>Specify the executable for the debug sessions: <strong>Projects</strong> --&gt; <strong>Run</strong> --&gt; <strong>Executable</strong>: <strong>...\minGwDebug\debug\vrep.exe</strong></li>


<br>
<br>
<h3 class=infoBox><strong>Ubuntu Precise 12.04 LTS 64-bit</strong>, V-REP  V3.0.3, Qt V4.8.1</h3>
 
 <p>Following instructions are courtesy of David Butterworth:</p>
 
 <p>If you can, run V-REP once, from within its installation directory:</p>
 
 <pre class=lightGreyBox>
$ ./vrep.sh</pre>

 
 <p>Check the <em>About</em> menu to see what version of Qt is used. Then download a fresh copy of V-REP PRO EDU. Download the V-REP source, and extract it to an installation directory (e.g. &quot;V-REP_PRO_EDU&quot;). Then check what version of Qt4 is available from the Ubuntu repo:</p>

 <pre class=lightGreyBox>
$ sudo aptitude show libqt4-core</pre>

<p>e.g. v4.8.1, which is what we want. Now install the dependencies:</p>

 <pre class=lightGreyBox>
$ sudo apt-get install qt4-dev-tools libqt4-dev libqt4-core libqt4-gui
$ sudo apt-get install lua5.1 lua5.1-doc lua5.1-lgi lua5.1-lgi-dev lua5.1-policy lua5.1-policy-dev 
$ sudo apt-get install liblua5.1-0 liblua5.1-0-dbg liblua5.1-0-dev liblua5.1-dev 
$ sudo apt-get install libboost-all-dev
$ sudo apt-getÂ  install qtcreator qtcreator-dbg qtcreator-doc</pre>

<p>Don't install QScintilla2 from the repo, it doesn't include the header files we need. Instead, download <em>QScintilla-gpl-2.7.1.tar.gz</em> from <a href="http://www.riverbankcomputing.com/software/qscintilla/download">here</a>. Fix the directory permissions and compile:</p>

 <pre class=lightGreyBox>
$ chown -R username:username QScintilla-gpl-2.7.1/
$ cd Qt4Qt5
$ qmake qscintilla.pro
$ make
$ sudo make install</pre>


<p>Check what version of Qt that QMake is using:</p>

 <pre class=lightGreyBox>
$ qmake -v
QMake version 2.01a
Using Qt version 4.8.1 in /usr/lib/x86_64-linux-gnu</pre>


<p>which is what we want. In the V-REP source directory, edit <em>v_rep.pro</em> to something similar to:</p>

 <pre class=lightGreyBox>unix:!macx {<br>   INCLUDEPATH += /usr/lib                                                # Boost dir.<br>   INCLUDEPATH += /usr/include/qt4                                        # QScintilla "Qt4" dir.<br>   INCLUDEPATH += /usr/include/qt4/Qsci                                   # QScintilla "include" dir.<br>   INCLUDEPATH += /home/USERNAME/Downloads/QScintilla-gpl-2.7.1/include   # for SciLexer.h<br>   LIBS += /usr/lib/x86_64-linux-gnu/libqscintilla2.so                    # QScintilla2 lib.<br>   contains(QMAKE_HOST.arch, x86_64):{                     # 64 Bit<br>      INCLUDEPATH += /usr/include/lua5.1                   # lua5.1 64 "include" dir.<br>      LIBS += -Llua5_1_4_Linux26g4_64_lib/ -llua5.1<br>      DEFINES += QT_VREP_64BIT<br>   }<br>   !contains(QMAKE_HOST.arch, x86_64):{                    # 32 Bit<br>      INCLUDEPATH += /usr/include/lua5.1                   # lua5.1 32 "include" dir.<br>      LIBS += -Llua5_1_4_Linux26g4_lib/ -llua5.1<br>   }<br>   DEFINES += LIN_VREP<br>}</pre>



<p>Now compile V-REP: run Qt Creator, load the project file <em>v_rep.pro</em>, or go to the directory where <em>v_rep.pro</em> is located, and type:</p>

 <pre class=lightGreyBox>
$ qmake v_rep.pro
$ make
$ sudo make install</pre>



<p>Which should install <em>/usr/lib/libv_rep.so**</em></p>


 
<br>
<br>


  
  </td>
 </tr>
</table> 
</div>  
  
  
</body>

</html>
